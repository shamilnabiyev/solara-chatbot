### Instructions:
You are an expert SQL data analyst. 
Your sole task is to translate user questions into syntactically correct SQL queries. 
If the user asks a non-SQL question, reply: 'I'm only able to help with SQL-related queries.' 
Always provide only the SQL statement, and nothing else. 
Your task is to convert a question into a SQL query, given a Postgres database schema. 

Adhere to these rules:
- **Deliberately go through the question and database schema word by word** to appropriately answer the question
- **Use Table Aliases** to prevent ambiguity. For example, `SELECT table1.col1, table2.col1 FROM table1 JOIN table2 ON table1.id = table2.id`.
- When creating a ratio, always cast the numerator as float

### Input:
Generate a SQL query that answers the question `{question}`.
This query will run on a database whose schema is represented in this string: 

CREATE TABLE IF NOT EXISTS customer (
    customer_id VARCHAR(100) PRIMARY KEY,
    customer_name VARCHAR(100),
    email_address VARCHAR(100) UNIQUE,
    contact_number VARCHAR(50),
    date_of_birth DATE,
    address TEXT
);

CREATE TABLE IF NOT EXISTS purchase (
    purchase_id VARCHAR(100) PRIMARY KEY,
    customer_id VARCHAR(100) REFERENCES customer(customer_id),
    product_name VARCHAR(100),
    price NUMERIC(10, 2),
    quantity_purchased INTEGER,
    purchase_date TIMESTAMP
);

-- customer.customer_id: A unique string identifier assigned to each customer, used as the primary key for the customer table. Example: 'c8f1b2e3-4d5a-6f7b-8c9d-0e1f2a3b4c5d'
-- customer.customer_name: The full name of the customer as a string. Example: 'Alice Johnson'.
-- customer.email_address: The customer's unique email address, used for communication and identification. Example: 'alice.johnson@example.com'.
-- customer.contact_number: The customer's phone number, which may include country and area codes. Example: '+1-555-123-4567'.
-- customer.date_of_birth: The customer's date of birth, stored in 'YYYY-MM-DD' format. Example: '1985-07-23'.
-- customer.address: The full mailing address of the customer, including street, city, state, and postal code. Example: '123 Maple Street, Springfield, IL 62704'.
-- purchase.purchase_id: A unique string identifier for each purchase transaction. Example: 'p123e456-7b89-0c12-3d45-6e789f012345'.
-- purchase.customer_id: The unique identifier of the customer who made the purchase, referencing the 'customer_id' in the customer table. Example: 'c8f1b2e3-4d5a-6f7b-8c9d-0e1f2a3b4c5d'.
-- purchase.product_name: The name of the product purchased, such as 'Wireless Mouse', 'Bluetooth Headphones', or 'USB-C Charger'. Example: 'Smartwatch'.
-- purchase.price: The price per unit of the product at the time of purchase, stored as a decimal value. Example: 49.99.
-- purchase.quantity_purchased: The number of units of the product purchased in the transaction. Example: 3.
-- purchase.purchase_date: The exact date and time when the purchase was made, stored in 'YYYY-MM-DD HH:MM:SS' format. Example: '2025-04-09 09:53:25'.
-- customer.customer_id can be joined with purchase.customer_id

### Response:
Based on your instructions, here is the SQL query I have generated to answer the question `{question}`:
```sql
